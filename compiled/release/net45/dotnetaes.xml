<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dotnetaes</name>
    </assembly>
    <members>
        <member name="T:DotNetAES.AESHMAC512">
            <summary>
            AESHMAC512 is an encryption wrapper that utilises GZIP, AES CBC and HMAC SHA512
            </summary>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CoreEncrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Core encryption function that deals with GZIP compression, AES CBC Encryption and HMAC SHA512 authentication wrapping
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CoreDecrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Core decryption function that deals with GZIP compression, AES CBC Encryption and HMAC SHA512 authentication wrapping
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="maxSecondsDifference"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.EncryptAESCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts a passed string into a byte array using AES CBC Mode
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.DecryptAESCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts a passed encrypted byte array using AES CBC Mode
            </summary>
            <param name="encryptedData"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.EncryptHMACSHA512(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts a passed encrypted byte array using HMAC SHA512
            </summary>
            <param name="encryptedData"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.DecryptHMACSHA512(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Decrypts a passed byte array using HMAC SHA512
            </summary>
            <param name="encryptedData"></param>
            <param name="authKey"></param>
            <param name="maxSecondsDifference"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AuthenticationTagValidation(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Checks the validitiy of the authentication tag for the HMAC SHA512 function
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <param name="tagLength"></param>
        </member>
        <member name="M:DotNetAES.AESHMAC512.DecryptToType``1(System.Object,System.Object,System.Object)">
            <summary>
            Decrypts the data and returns it in a format which has been specified
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.DecryptToType``1(System.Object,System.Object,System.Object,System.Int32)">
            <summary>
            Decrypts the data and returns it in a format which has been specified
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="maxSecondsDifference"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.SaveDecryptedFile(System.String,System.Byte[],System.Object,System.Object)">
            <summary>
            Decrypts a file and saves it to the specified path
            </summary>
            <param name="path"></param>
            <param name="fileData"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.SaveDecryptedFile(System.String,System.Byte[],System.Object,System.Object,System.Int32)">
            <summary>
            Decrypts a file and saves it to the specified path
            </summary>
            <param name="path"></param>
            <param name="fileData"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="maxSecondsDifference"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.LoadDecryptedFile(System.String,System.Object,System.Object)">
            <summary>
            Loads a file from the specified path and decrypts it
            </summary>
            <param name="path"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.LoadDecryptedFile(System.String,System.Object,System.Object,System.Int32)">
            <summary>
            Loads a file from the specified path and decrypts it
            </summary>
            <param name="path"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="maxSecondsDifference"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.EncryptToString(System.Object,System.Object,System.Object)">
            <summary>
            Encrypts the data specified and returns it in a base64 string format
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.EncryptToBytes(System.Object,System.Object,System.Object)">
            <summary>
            Encrypts the data specified and returns it in a byte array format
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.SaveEncryptedFile(System.String,System.Byte[],System.Object,System.Object)">
            <summary>
            Encrypts a file and saves it to the specified path
            </summary>
            <param name="path"></param>
            <param name="fileData"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.LoadEncryptedFile(System.String,System.Object,System.Object)">
            <summary>
            Loads a file from the specified path and encrypts it
            </summary>
            <param name="path"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CreateStringAuthenticationKey">
            <summary>
            Generates the HMACSHA512 key and returns it in base64 string format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CreateByteAuthenticationKey">
            <summary>
            Generates the HMACSHA512 key and returns it in a byte array format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CreateByteIV">
            <summary>
            Generates an IV and returns it in a byte array format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CreateStringAESKey">
            <summary>
            Generates an AES 256 key and returns it in base64 string format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.CreateByteAESKey">
            <summary>
            Generates an AES 256 key and returns it in a byte array format
            </summary>
            <returns></returns>
        </member>
        <member name="F:DotNetAES.AESHMAC512.theKeySize">
            <summary>
            Stores the length of the key requirement
            </summary>
        </member>
        <member name="F:DotNetAES.AESHMAC512.ivSize">
            <summary>
            Stores the length of the IVs
            </summary>
        </member>
        <member name="F:DotNetAES.AESHMAC512.timestampLength">
            <summary>
            Timestamp length
            </summary>
        </member>
        <member name="F:DotNetAES.AESHMAC512.cipherMode">
            <summary>
            Stores the ciphermode to use in AES: CBC
            </summary>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512Decrypt(System.Data.DataTable,System.Object,System.Object)">
            <summary>
            Decrypts all the DataTable columns using the IV column and key supplied
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512DecryptIgnore(System.Data.DataTable,System.Object,System.Object,System.String[])">
            <summary>
            Decrypts all the DataTable columns that are not in the ignore list
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="ignoreColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512DecryptOnly(System.Data.DataTable,System.Object,System.Object,System.String[])">
            <summary>
             Decrypts only the DataTable columns that are specified
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="onlyColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512Encrypt(System.Data.DataTable,System.Object,System.Object)">
            <summary>
            Encrypts all the DataTable columns using AES CBC HMAC SHA512
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512EncryptIgnore(System.Data.DataTable,System.Object,System.Object,System.String[])">
            <summary>
            Encrypts all the DataTable columns that are not in the ignore list
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="ignoreColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AESHMAC512.AESHMAC512EncryptOnly(System.Data.DataTable,System.Object,System.Object,System.String[])">
            <summary>
             Encrypts only the DataTable columns that are specified
            </summary>
            <param name="data"></param>
            <param name="cryptKey"></param>
            <param name="authKey"></param>
            <param name="onlyColumns"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetAES.AES">
            <summary>
            AES is an encryption wrapper that utilises GZIP and AES CBC
            </summary>
        </member>
        <member name="M:DotNetAES.AES.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts a passed string into a byte array using AES CBC Mode
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts a passed encrypted byte array using AES CBC Mode
            </summary>
            <param name="encryptedData"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.DecryptToType``1(System.Object,System.Object,System.Object)">
            <summary>
            Decrypts the data and returns it in a format which has been specified
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.SaveDecryptedFile(System.String,System.Byte[],System.Object,System.Object)">
            <summary>
            Decrypts a file and saves it to the specified path
            </summary>
            <param name="path"></param>
            <param name="fileData"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.LoadDecryptedFile(System.String,System.Object,System.Object)">
            <summary>
            Loads a file from the specified path and decrypts it
            </summary>
            <param name="path"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.EncryptToString(System.Object,System.Object,System.Object)">
            <summary>
            Encrypts the data specified and returns it in a base64 string format
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.EncryptToBytes(System.Object,System.Object,System.Object)">
            <summary>
            Encrypts the data specified and returns it in a byte array format
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.SaveEncryptedFile(System.String,System.Byte[],System.Object,System.Object)">
            <summary>
            Encrypts a file and saves it to the specified path
            </summary>
            <param name="path"></param>
            <param name="fileData"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.LoadEncryptedFile(System.String,System.Object,System.Object)">
            <summary>
            Loads a file from the specified path and encrypts it
            </summary>
            <param name="path"></param>
            <param name="key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.CreateStringIV">
            <summary>
            Generates an IV and returns it in base64 string format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.CreateByteIV">
            <summary>
            Generates an IV and returns it in a byte array format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.CreateStringKey">
            <summary>
            Generates a 256 key and returns it in base64 string format
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.CreateByteKey">
            <summary>
            Generates a 256 key and returns it in a byte array format
            </summary>
            <returns></returns>
        </member>
        <member name="F:DotNetAES.AES.theKeySize">
            <summary>
            Stores the length of the key requirement
            </summary>
        </member>
        <member name="F:DotNetAES.AES.cipherMode">
            <summary>
            Stores the ciphermode to use in AES: CBC
            </summary>
        </member>
        <member name="M:DotNetAES.AES.AESDecrypt(System.Data.DataTable,System.String,System.Object)">
            <summary>
            Decrypts all the DataTable columns using the IV column and key supplied
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.AESDecryptIgnore(System.Data.DataTable,System.String,System.Object,System.String[])">
            <summary>
            Decrypts all the DataTable columns that are not in the ignore list
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <param name="ignoreColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.AESDecryptOnly(System.Data.DataTable,System.String,System.Object,System.String[])">
            <summary>
             Decrypts only the DataTable columns that are specified
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <param name="onlyColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.AESEncrypt(System.Data.DataTable,System.String,System.Object)">
            <summary>
            Encrypts all the DataTable columns using the IV column and key supplied
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.AESEncryptIgnore(System.Data.DataTable,System.String,System.Object,System.String[])">
            <summary>
            Encrypts all the DataTable columns that are not in the ignore list
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <param name="ignoreColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.AES.AESEncryptOnly(System.Data.DataTable,System.String,System.Object,System.String[])">
            <summary>
             Encrypts only the DataTable columns that are specified
            </summary>
            <param name="data"></param>
            <param name="ivColumnName"></param>
            <param name="key"></param>
            <param name="onlyColumns"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.GZIPDecompress(System.Byte[])">
            <summary>
            Decompresses the supplied byte array from GZIP format
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.GZIPCompress(System.Byte[])">
            <summary>
            Compresses the supplied byte array in GZIP format
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.SerializeToBytes(System.Object)">
            <summary>
            Serializes an object to byte array
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.DerializeFromBytes``1(System.Byte[])">
            <summary>
            Deserialize a byte array to a specified type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.UnixTimeStampToDateTime(System.Double)">
            <summary>
            Converts a unix timestamp back into DateTime object
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.DateTimeToUnixTimestamp(System.DateTime)">
            <summary>
            Converts a DateTime object into a unix timestamp string
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.CoreValidation(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Validates the primary data required for the core AES encryption and decryption functions
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <param name="IV"></param>
        </member>
        <member name="M:DotNetAES.Tools.EncryptedDataValidation(System.Object)">
            <summary>
            Validates the supplied encrypted data format for the decryption functions
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.KeyValidation(System.Object)">
            <summary>
            Validates the supplied key format for encryption and decryption functions
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetAES.Tools.IVValidaton(System.Object)">
            <summary>
            Validates the supplied IV format for encryption and decryption functions
            </summary>
            <param name="IV"></param>
            <returns></returns>
        </member>
    </members>
</doc>
